create database college;

use college;

create table student (
	student_id	INTEGER PRIMARY KEY NOT NULL,
	name	VARCHAR(10) NOT NULL,
	year	TINYINT NOT NULL DEFAULT 1,
	dept_no	INTEGER	NOT NULL,
	major	VARCHAR(20)
);

create table department (
	dept_no	INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
	dept_name	VARCHAR(20) NOT NULL UNIQUE,
	office	VARCHAR(20) NOT NULL,
	office_tel	VARCHAR(13)
);

alter table student modify major varchar(40);
alter table student add column gender;

alter table department modify dept_name varchar(40);
alter talbe department modify office varchar(30);

alter table studnet drop column gender;

insert into student values(20070002, 'James Bond', 3, 4, 'Business Administration);

insert into student values(20060001, 'Queenie', 4, 4, 'Business
Administration');

insert into student values(20030001, 'Reonardo', 4, 2, 'Electronic Engineering');

insert into student values(20040003, 'Julia', 3, 2, 'Electronic Engineering');

insert into student values(20060002, 'Roosevelt', 3, 1, 'Computer Science');

insert into student values (20100002, 'Fearne', 3, 4, 'Business
Administration');

insert into student values(20110001, 'Chloe', 2, 1, 'Computer Science');

insert into student values (20080003, 'Amy', 4, 3, 'Law');

insert into student values(20040002, 'Selina', 4, 5, 'English Literature');

insert into student values (20070001, 'Ellen', 4, 4, 'Business Administration');

insert into student values(20100001, 'Kathy', 3, 4, 'Business Administration');

insert into student values (20110002, 'Lucy', 2, 2, 'Electronic
Engineering');

insert into student valuesâ€¢ (20030002, 'Michelle', 5, 1, 'Computer Science');

insert into student values(20070003, 'April', 4, 3, 'Law');

insert into student values(20070005, 'Alicia', 2, 5, 'English Literature');

insert into student values (20100003, 'Yullia', 3, 1, 'Computer Science');

insert into student values(20070007, 'Ashlee', 2, 4, 'Business Administration');


insert into department values('Computer Science', 'Engineering building', '02-3290-0123');

insert into department values ('Electronic Engineering', 'Engineering building', '02-3290-2345');

insert into department values ('Law', 'Law building', '02-3290-7896');

insert into department values('Business Administration', 'Administration building', '02-3290-1112');

insert into department values('English Literature', 'Literature building', '02-3290-4412');

Ex3

update department set dept_name = 'Electronic and Electrical Engineering' where dept_name = ''Electronic engineering';

replace into student department('Education', 'Education Building', '02-3290-2347');

update student set dept_no = 6, major = 'Education' where
name = 'Chloe';

delete from student where name = 'Michelle';

delete from student where name = 'Fearne';


Ex4

select * from student where dept_no = 1;

select student_id, year, major from student;

select * from student where year = 3;

select * from student where year = 1 or year = 2;

select * from student where dept_no = 4;

Ex5
select * from student where student_id like '2007%';

select * from student order by student_id;

select major from student group by major having avg(year) > 3;

select * from student where dept_no = 4 and student_id like '2007%' limit 2;

Ex6

mysql -uroot -proot simpsons < simpsons.sql
mysql -uroot -proot world < world.sql
mysql -uroot -proot imdb_small < imdb_small.sql

select * from countries join languages on code = country_code where independence_year = 1948;

select * from countries join languages on code = country_code where language = 'English' and official = 'T' and language = 'French' and official = 'T';

//
select name from countries join languages on code = country_code where language = 'French' and official = 'T';

select * from countries join languages on code = country_code where life_expectancy > 75 order by percentage desc limit 5;

select c.name from countries join languages on code = country_code join cities c on capital = id where language = 'Korean' and language = 'English';

select c.name, sum(percentage) from countries join languages on code = country_code join cities c on capital = id where official = 'T' group by c.name having sum(percentage) > 20 and sum(percentage) < 50;

select co.name, sum(surface_area), avg(c.population) from countries co join languages on code = country_code join cities c on capital = id group by co.name order by avg(c.population) desc limit 5;